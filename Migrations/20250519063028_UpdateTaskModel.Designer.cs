// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoomieManager.Data;

#nullable disable

namespace RoomieManager.Migrations
{
    [DbContext(typeof(RoomieManagerDBContext))]
    [Migration("20250519063028_UpdateTaskModel")]
    partial class UpdateTaskModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("RoomieManager.Models.PrioritiesModel", b =>
                {
                    b.Property<int>("typeID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("roommieID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("priority")
                        .HasColumnType("INTEGER");

                    b.HasKey("typeID", "roommieID");

                    b.HasIndex("roommieID");

                    b.ToTable("Priorities");
                });

            modelBuilder.Entity("RoomieManager.Models.RoomieModel", b =>
                {
                    b.Property<int>("roomieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("photoURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("roomieId");

                    b.HasIndex("userId");

                    b.ToTable("Roomies");
                });

            modelBuilder.Entity("RoomieManager.Models.TaskModel", b =>
                {
                    b.Property<int>("taskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("plannedFinishDateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("plannedStartDateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("reviewDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("reviewNote")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("reviewRoomieID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("roomieID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("typeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("taskID");

                    b.HasIndex("reviewRoomieID");

                    b.HasIndex("roomieID");

                    b.HasIndex("typeID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("RoomieManager.Models.TaskTypeModel", b =>
                {
                    b.Property<int>("taskTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("taskTypeId");

                    b.ToTable("TaskTypes");
                });

            modelBuilder.Entity("RoomieManager.Models.UserModel", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RoomieManager.Models.PrioritiesModel", b =>
                {
                    b.HasOne("RoomieManager.Models.RoomieModel", "roomie")
                        .WithMany()
                        .HasForeignKey("roommieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoomieManager.Models.TaskTypeModel", "taskType")
                        .WithMany()
                        .HasForeignKey("typeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("roomie");

                    b.Navigation("taskType");
                });

            modelBuilder.Entity("RoomieManager.Models.RoomieModel", b =>
                {
                    b.HasOne("RoomieManager.Models.UserModel", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("RoomieManager.Models.TaskModel", b =>
                {
                    b.HasOne("RoomieManager.Models.RoomieModel", "reviewRoomie")
                        .WithMany()
                        .HasForeignKey("reviewRoomieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoomieManager.Models.RoomieModel", "roomie")
                        .WithMany()
                        .HasForeignKey("roomieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoomieManager.Models.TaskTypeModel", "taskType")
                        .WithMany()
                        .HasForeignKey("typeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reviewRoomie");

                    b.Navigation("roomie");

                    b.Navigation("taskType");
                });
#pragma warning restore 612, 618
        }
    }
}
